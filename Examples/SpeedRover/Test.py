import subprocess
import os

print("----------------------\nChoose file\n----------------------\n ")
demo_folder = "/Users/shaesaert/Documents/GitHub/SCA/Demo_Alice_ext"
abspath = os.path.dirname(os.path.abspath(__file__))

demo = raw_input('Use Demo Speedrover file (2 sensors): y/[n] ')
if demo == "y":
    XMLfile = "Alice2_Demo"
    measure = 'measure2'

else:
    print("\n----------------------\nUse autogenerated file\n----------------------\n")
    demo = raw_input('number of sensors: 1/[2]/3 ')
    if demo == '1':
        XMLfile = "Alice1_gen"
        measure = 'measure1'
    elif demo == '2':
        XMLfile = "Alice2_gen"
        measure = 'measure2'
    elif demo == '3':
        XMLfile = "Alice3_gen"
        measure = 'measure3_nofailure'
        print("3 sensors + freeway sensor \n")
    else:
        XMLfile = "Alice2_gen"
        measure='measure2'



    print("----------------------\nMove file to demofolder:\n----------------------\n ")
    filepath = abspath + "/" + XMLfile + ".xml"
    subprocess.check_call(["cp", filepath, demo_folder])

    print("----------------------\nMove Environment to demofolder:\n----------------------\n ")
    if demo =='3':
        print("Signals for 3 sensors + freeway \n----------------------\n")
        print("1. Freeway with no failure [default]\n")
        print("2. Off freeway with only stereo \n")
        print("3. Full failure\n")
        print("4. Failure of stereo after 10 \n")

        option = raw_input('Pick signal: [1]/2/3/4 ')
        if option == '2':
            measure = 'measure3_stereo_only'
        elif option == '3':
            measure = 'measure3_failure_constant'
        elif option == '4':
            measure = 'measure3_good_to_fail'
        else :
            measure = 'measure3_nofailure'

filepath = abspath + "/" + measure + ".c"
subprocess.check_call(["cp", filepath, demo_folder])

subprocess.check_call(["mv", measure + '.c', 'Measure.c'], cwd=demo_folder)


print("----------------------\nRemove content autocode folder\n----------------------\n")
subprocess.check_call(["make", "autoclean"], cwd=demo_folder)

print("----------------------\nAutocode\n----------------------\n")
subprocess.check_call(["make", "auto", 'CLASSNAME = ' + XMLfile], cwd=demo_folder)

print("----------------------\nExecute make clean all\n----------------------\n")
subprocess.check_call(["make", "clean"], cwd=demo_folder)
subprocess.check_call(["make", "all"], cwd=demo_folder)

print("----------------------\nShow demo? Wait for user input\n----------------------\n ")
demo = raw_input('Simulate demo: y/[n] ')
if demo == "y":
    subprocess.check_call(["./setup.py"],cwd=demo_folder)
